#BEGIN_LEGAL
#
#Copyright (c) 2020 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  
#END_LEGAL

# FIXME: 2020-03-19: Not used
xed_reg_enum_t GPRm_B()::
mode64  | OUTREG=GPR64_B() 
mode32 | OUTREG=GPR32_B() 
mode16 | OUTREG=GPR32_B() 

xed_reg_enum_t GPRm_R()::
mode64 | OUTREG=GPR64_R() 
mode32 | OUTREG=GPR32_R() 
mode16 | OUTREG=GPR32_R() 

####



xed_reg_enum_t EGPRm_N()::
mode16 | OUTREG=EGPR32_N_32()
mode32 | OUTREG=EGPR32_N_32()
mode64 | OUTREG=EGPR32_N_64()

xed_reg_enum_t EGPRm_B()::
mode16 | OUTREG=EGPR32_B_32()
mode32 | OUTREG=EGPR32_B_32()
mode64 | OUTREG=EGPR32_B_64()

xed_reg_enum_t EGPRm_R()::
mode16 | OUTREG=EGPR32_R_32()
mode32 | OUTREG=EGPR32_R_32()
mode64 | OUTREG=EGPR32_R_64()






xed_reg_enum_t EGPR32_N_32():: # IGNORES UPPER BIT  (VEXDEST3) IN 32b mode
VEXDEST210=7   | OUTREG=XED_REG_EAX
VEXDEST210=6   | OUTREG=XED_REG_ECX
VEXDEST210=5   | OUTREG=XED_REG_EDX
VEXDEST210=4   | OUTREG=XED_REG_EBX
VEXDEST210=3   | OUTREG=XED_REG_ESP
VEXDEST210=2   | OUTREG=XED_REG_EBP
VEXDEST210=1   | OUTREG=XED_REG_ESI
VEXDEST210=0   | OUTREG=XED_REG_EDI

xed_reg_enum_t EGPR32_N_64():: # IGNORES UPPER BIT  (VEXDEST3) IN 32b mode
VEXDEST3=1 VEXDEST210=7   | OUTREG=XED_REG_EAX
VEXDEST3=1 VEXDEST210=6   | OUTREG=XED_REG_ECX
VEXDEST3=1 VEXDEST210=5   | OUTREG=XED_REG_EDX
VEXDEST3=1 VEXDEST210=4   | OUTREG=XED_REG_EBX
VEXDEST3=1 VEXDEST210=3   | OUTREG=XED_REG_ESP
VEXDEST3=1 VEXDEST210=2   | OUTREG=XED_REG_EBP
VEXDEST3=1 VEXDEST210=1   | OUTREG=XED_REG_ESI
VEXDEST3=1 VEXDEST210=0   | OUTREG=XED_REG_EDI
VEXDEST3=0 VEXDEST210=7   | OUTREG=XED_REG_R8D
VEXDEST3=0 VEXDEST210=6   | OUTREG=XED_REG_R9D
VEXDEST3=0 VEXDEST210=5   | OUTREG=XED_REG_R10D
VEXDEST3=0 VEXDEST210=4   | OUTREG=XED_REG_R11D
VEXDEST3=0 VEXDEST210=3   | OUTREG=XED_REG_R12D
VEXDEST3=0 VEXDEST210=2   | OUTREG=XED_REG_R13D
VEXDEST3=0 VEXDEST210=1   | OUTREG=XED_REG_R14D
VEXDEST3=0 VEXDEST210=0   | OUTREG=XED_REG_R15D


xed_reg_enum_t EGPR64_N_64()::
VEXDEST3=1 VEXDEST210=7  | OUTREG=XED_REG_RAX
VEXDEST3=1 VEXDEST210=6  | OUTREG=XED_REG_RCX
VEXDEST3=1 VEXDEST210=5  | OUTREG=XED_REG_RDX
VEXDEST3=1 VEXDEST210=4  | OUTREG=XED_REG_RBX
VEXDEST3=1 VEXDEST210=3  | OUTREG=XED_REG_RSP
VEXDEST3=1 VEXDEST210=2  | OUTREG=XED_REG_RBP
VEXDEST3=1 VEXDEST210=1  | OUTREG=XED_REG_RSI
VEXDEST3=1 VEXDEST210=0  | OUTREG=XED_REG_RDI
VEXDEST3=0 VEXDEST210=7  | OUTREG=XED_REG_R8
VEXDEST3=0 VEXDEST210=6  | OUTREG=XED_REG_R9
VEXDEST3=0 VEXDEST210=5  | OUTREG=XED_REG_R10
VEXDEST3=0 VEXDEST210=4  | OUTREG=XED_REG_R11
VEXDEST3=0 VEXDEST210=3  | OUTREG=XED_REG_R12
VEXDEST3=0 VEXDEST210=2  | OUTREG=XED_REG_R13
VEXDEST3=0 VEXDEST210=1  | OUTREG=XED_REG_R14
VEXDEST3=0 VEXDEST210=0  | OUTREG=XED_REG_R15


###########

xed_reg_enum_t EGPR32_R_32():: # IGNORES  (REXR) IN 32b mode
REG=0   | OUTREG=XED_REG_EAX
REG=1   | OUTREG=XED_REG_ECX
REG=2   | OUTREG=XED_REG_EDX
REG=3   | OUTREG=XED_REG_EBX
REG=4   | OUTREG=XED_REG_ESP
REG=5   | OUTREG=XED_REG_EBP
REG=6   | OUTREG=XED_REG_ESI
REG=7   | OUTREG=XED_REG_EDI


xed_reg_enum_t EGPR32_R_64()::
REXRR=0 REXR=0 REG=0  | OUTREG=XED_REG_EAX
REXRR=0 REXR=0 REG=1  | OUTREG=XED_REG_ECX
REXRR=0 REXR=0 REG=2  | OUTREG=XED_REG_EDX
REXRR=0 REXR=0 REG=3  | OUTREG=XED_REG_EBX
REXRR=0 REXR=0 REG=4  | OUTREG=XED_REG_ESP
REXRR=0 REXR=0 REG=5  | OUTREG=XED_REG_EBP
REXRR=0 REXR=0 REG=6  | OUTREG=XED_REG_ESI
REXRR=0 REXR=0 REG=7  | OUTREG=XED_REG_EDI
REXRR=0 REXR=1 REG=0  | OUTREG=XED_REG_R8D
REXRR=0 REXR=1 REG=1  | OUTREG=XED_REG_R9D
REXRR=0 REXR=1 REG=2  | OUTREG=XED_REG_R10D
REXRR=0 REXR=1 REG=3  | OUTREG=XED_REG_R11D
REXRR=0 REXR=1 REG=4  | OUTREG=XED_REG_R12D
REXRR=0 REXR=1 REG=5  | OUTREG=XED_REG_R13D
REXRR=0 REXR=1 REG=6  | OUTREG=XED_REG_R14D
REXRR=0 REXR=1 REG=7  | OUTREG=XED_REG_R15D

REXRR=1 REXR=0 REG=0  | OUTREG=XED_REG_ERROR enc
REXRR=1 REXR=0 REG=1  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=2  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=3  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=4  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=5  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=6  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=7  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=0  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=1  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=2  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=3  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=4  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=5  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=6  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=7  | OUTREG=XED_REG_ERROR

xed_reg_enum_t EGPR64_R_64()::
REXRR=0 REXR=0 REG=0  | OUTREG=XED_REG_RAX
REXRR=0 REXR=0 REG=1  | OUTREG=XED_REG_RCX
REXRR=0 REXR=0 REG=2  | OUTREG=XED_REG_RDX
REXRR=0 REXR=0 REG=3  | OUTREG=XED_REG_RBX
REXRR=0 REXR=0 REG=4  | OUTREG=XED_REG_RSP
REXRR=0 REXR=0 REG=5  | OUTREG=XED_REG_RBP
REXRR=0 REXR=0 REG=6  | OUTREG=XED_REG_RSI
REXRR=0 REXR=0 REG=7  | OUTREG=XED_REG_RDI
REXRR=0 REXR=1 REG=0  | OUTREG=XED_REG_R8
REXRR=0 REXR=1 REG=1  | OUTREG=XED_REG_R9
REXRR=0 REXR=1 REG=2  | OUTREG=XED_REG_R10
REXRR=0 REXR=1 REG=3  | OUTREG=XED_REG_R11
REXRR=0 REXR=1 REG=4  | OUTREG=XED_REG_R12
REXRR=0 REXR=1 REG=5  | OUTREG=XED_REG_R13
REXRR=0 REXR=1 REG=6  | OUTREG=XED_REG_R14
REXRR=0 REXR=1 REG=7  | OUTREG=XED_REG_R15

REXRR=1 REXR=0 REG=0  | OUTREG=XED_REG_ERROR enc
REXRR=1 REXR=0 REG=1  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=2  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=3  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=4  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=5  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=6  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=0 REG=7  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=0  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=1  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=2  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=3  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=4  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=5  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=6  | OUTREG=XED_REG_ERROR
REXRR=1 REXR=1 REG=7  | OUTREG=XED_REG_ERROR

###################

xed_reg_enum_t EGPR32_B_32()::  # IGNORES  (REXB) IN 32b mode
RM=0   | OUTREG=XED_REG_EAX
RM=1   | OUTREG=XED_REG_ECX
RM=2   | OUTREG=XED_REG_EDX
RM=3   | OUTREG=XED_REG_EBX
RM=4   | OUTREG=XED_REG_ESP
RM=5   | OUTREG=XED_REG_EBP
RM=6   | OUTREG=XED_REG_ESI
RM=7   | OUTREG=XED_REG_EDI


xed_reg_enum_t EGPR32_B_64()::
REXB=0 RM=0  | OUTREG=XED_REG_EAX
REXB=0 RM=1  | OUTREG=XED_REG_ECX
REXB=0 RM=2  | OUTREG=XED_REG_EDX
REXB=0 RM=3  | OUTREG=XED_REG_EBX
REXB=0 RM=4  | OUTREG=XED_REG_ESP
REXB=0 RM=5  | OUTREG=XED_REG_EBP
REXB=0 RM=6  | OUTREG=XED_REG_ESI
REXB=0 RM=7  | OUTREG=XED_REG_EDI
REXB=1 RM=0  | OUTREG=XED_REG_R8D
REXB=1 RM=1  | OUTREG=XED_REG_R9D
REXB=1 RM=2  | OUTREG=XED_REG_R10D
REXB=1 RM=3  | OUTREG=XED_REG_R11D
REXB=1 RM=4  | OUTREG=XED_REG_R12D
REXB=1 RM=5  | OUTREG=XED_REG_R13D
REXB=1 RM=6  | OUTREG=XED_REG_R14D
REXB=1 RM=7  | OUTREG=XED_REG_R15D

xed_reg_enum_t EGPR64_B_64()::
REXB=0 RM=0  | OUTREG=XED_REG_RAX
REXB=0 RM=1  | OUTREG=XED_REG_RCX
REXB=0 RM=2  | OUTREG=XED_REG_RDX
REXB=0 RM=3  | OUTREG=XED_REG_RBX
REXB=0 RM=4  | OUTREG=XED_REG_RSP
REXB=0 RM=5  | OUTREG=XED_REG_RBP
REXB=0 RM=6  | OUTREG=XED_REG_RSI
REXB=0 RM=7  | OUTREG=XED_REG_RDI
REXB=1 RM=0  | OUTREG=XED_REG_R8
REXB=1 RM=1  | OUTREG=XED_REG_R9
REXB=1 RM=2  | OUTREG=XED_REG_R10
REXB=1 RM=3  | OUTREG=XED_REG_R11
REXB=1 RM=4  | OUTREG=XED_REG_R12
REXB=1 RM=5  | OUTREG=XED_REG_R13
REXB=1 RM=6  | OUTREG=XED_REG_R14
REXB=1 RM=7  | OUTREG=XED_REG_R15


