#BEGIN_LEGAL
#
#Copyright (c) 2019 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  
#END_LEGAL
CONVERT(XED_OPERAND_CONVERT)::
0 -> ''
1 -> '{1to8}'
2 -> '{4to8}'
3 -> '{float16}'
4 -> '{uint8}'
5 -> '{sint8}'
6 -> '{uint16}'
7 -> '{int16}'
8 -> '{int8}'
9 -> '{1to16}'
10 -> '{4to16}'



REGSWIZ(XED_OPERAND_REGSWIZ)::
0 -> ''
1 -> '{cdab}'
2 -> '{badc}'
3 -> '{dacb}'
4 -> '{aaaa}'
5 -> '{bbbb}'
6 -> '{cccc}'
7 -> '{dddd}'

ROUNDC(XED_OPERAND_ROUNDC)::
0  -> ''
1  -> '{rne}'
2  -> '{rd}'
3  -> '{ru}'
4  -> '{rz}'

SAEC(XED_OPERAND_SAE)::
0  -> ''
1  -> '{sae}'


NT(XED_OPERAND_NR)::
0  -> ''
1  -> '{eh}' # {nt}


UPCONVERT_FLOAT32(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> '{1to16}'
0b010  -> '{4to16}'
0b011  -> '{float16}'
0b100  -> '{uint8}'
0b101  -> error
0b110  -> '{uint16}'
0b111  -> '{int16}'


UPCONVERT_INT32(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> '{1to16}'
0b010  -> '{4to16}'
0b011  -> error
0b100  -> '{uint8}'
0b101  -> '{int8}'
0b110  -> '{uint16}'
0b111  -> '{int16}'

UPCONVERT_FLOAT64(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> '{1to8}'
0b010  -> '{4to8}'
0b011  -> error
0b100  -> error
0b101  -> error
0b110  -> error
0b111  -> error

UPCONVERT_INT64(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> '{1to8}'
0b010  -> '{4to8}'
0b011  -> error
0b100  -> error
0b101  -> error
0b110  -> error
0b111  -> error


DOWNCONVERT_FLOAT32(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> error
0b010  -> error
0b011  -> '{float16}'
0b100  -> '{uint8}'
0b101  -> error
0b110  -> '{uint16}'
0b111  -> '{int16}'

DOWNCONVERT_INT32(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> error
0b010  -> error
0b011  -> error
0b100  -> '{uint8}'
0b101  -> '{int8}'
0b110  -> '{uint16}'
0b111  -> '{int16}'

DOWNCONVERT_FLOAT64(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> error
0b010  -> error
0b011  -> error
0b100  -> error
0b101  -> error
0b110  -> error
0b111  -> error

DOWNCONVERT_INT64(XED_OPERAND_SWIZ)::
0b000  -> ''
0b001  -> error
0b010  -> error
0b011  -> error
0b100  -> error
0b101  -> error
0b110  -> error
0b111  -> error


